{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from\"react\";import{auth,signInWithGoogle as firebaseSignInWithGoogle,logOut as firebaseLogOut}from\"../firebase\";import{onAuthStateChanged}from\"firebase/auth\";// Define API URL\nimport{jsx as _jsx}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[userProfile,setUserProfile]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const unsubscribe=onAuthStateChanged(auth,user=>{console.log(\"Auth state changed:\",user);setCurrentUser(user);setLoading(false);});return unsubscribe;},[]);// Create or update user in MongoDB\nconst syncUserWithMongoDB=async user=>{if(!user)return null;try{// Check if user exists in MongoDB\nconst response=await fetch(`${API_URL}/api/users?email=${encodeURIComponent(user.email)}`);if(response.ok){const data=await response.json();if(data.exists){// User exists, update profile if needed\nreturn await fetchUserProfile(user.uid);}else{// Create new user\nconst createResponse=await fetch(`${API_URL}/api/users`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({uid:user.uid,email:user.email,display_name:user.displayName||user.email.split('@')[0],photo_url:user.photoURL||null})});if(createResponse.ok){return await fetchUserProfile(user.uid);}else{console.error('Failed to create user in MongoDB');return null;}}}else{console.error('Failed to check user in MongoDB');return null;}}catch(error){console.error(\"Error syncing user with MongoDB:\",error);return null;}};// Fetch user profile from MongoDB\nconst fetchUserProfile=async userId=>{try{const response=await fetch(`${API_URL}/api/users/${userId}`);if(response.ok){return await response.json();}else{console.error('Failed to fetch user profile');return null;}}catch(error){console.error(\"Error fetching user profile:\",error);return null;}};// Monitor authentication state\nuseEffect(()=>{const unsubscribe=onAuthStateChanged(auth,async user=>{setCurrentUser(user);if(user){try{// Sync user with MongoDB and get profile\nconst profile=await syncUserWithMongoDB(user);setUserProfile(profile);}catch(error){console.error('Error syncing user with MongoDB:',error);}}else{setUserProfile(null);}setLoading(false);});return unsubscribe;},[currentUser,syncUserWithMongoDB]);const signInWithGoogle=async()=>{try{const result=await firebaseSignInWithGoogle();return result;}catch(error){console.error(\"Error in googleSignIn:\",error);throw error;}};const logOut=async()=>{try{await firebaseLogOut();setCurrentUser(null);}catch(error){console.error(\"Error signing out:\",error);throw error;}};// Update user profile in MongoDB\nconst updateUserProfile=async profileData=>{if(!currentUser){throw new Error(\"No authenticated user\");}try{const response=await fetch(`${API_URL}/api/users/${currentUser.uid}/profile`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(profileData)});if(response.ok){const updatedProfile=await response.json();setUserProfile(updatedProfile);return updatedProfile;}else{throw new Error('Failed to update profile');}}catch(error){console.error(\"Error updating profile:\",error);throw error;}};// Save coding history to MongoDB\nconst saveCodeHistory=async historyData=>{if(!currentUser||!userProfile){console.error(\"Cannot save history: No authenticated user or profile\");return null;}try{const response=await fetch(`${API_URL}/api/users/${currentUser.uid}/history`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({language:historyData.language||'unknown',original_code:historyData.originalCode,fixed_code:historyData.fixedCode,error_message:historyData.errorMessage})});if(response.ok){return await response.json();}else{throw new Error('Failed to save history');}}catch(error){console.error(\"Error saving code history:\",error);return null;}};const value={currentUser,userProfile,loading,signInWithGoogle,logOut,updateUserProfile,saveCodeHistory};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","auth","signInWithGoogle","firebaseSignInWithGoogle","logOut","firebaseLogOut","onAuthStateChanged","jsx","_jsx","API_URL","process","env","REACT_APP_API_URL","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","currentUser","setCurrentUser","userProfile","setUserProfile","loading","setLoading","unsubscribe","user","console","log","syncUserWithMongoDB","response","fetch","encodeURIComponent","email","ok","data","json","exists","fetchUserProfile","uid","createResponse","method","headers","body","JSON","stringify","display_name","displayName","split","photo_url","photoURL","error","userId","profile","result","updateUserProfile","profileData","updatedProfile","saveCodeHistory","historyData","language","original_code","originalCode","fixed_code","fixedCode","error_message","errorMessage","value","Provider"],"sources":["C:/Users/konda/Videos/Ai-powered-debugger-master/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { \r\n  auth, \r\n  signInWithGoogle as firebaseSignInWithGoogle, \r\n  logOut as firebaseLogOut \r\n} from \"../firebase\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\n\r\n// Define API URL\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      console.log(\"Auth state changed:\", user);\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  // Create or update user in MongoDB\r\n  const syncUserWithMongoDB = async (user) => {\r\n    if (!user) return null;\r\n    \r\n    try {\r\n      // Check if user exists in MongoDB\r\n      const response = await fetch(`${API_URL}/api/users?email=${encodeURIComponent(user.email)}`);\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        \r\n        if (data.exists) {\r\n          // User exists, update profile if needed\r\n          return await fetchUserProfile(user.uid);\r\n        } else {\r\n          // Create new user\r\n          const createResponse = await fetch(`${API_URL}/api/users`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              uid: user.uid,\r\n              email: user.email,\r\n              display_name: user.displayName || user.email.split('@')[0],\r\n              photo_url: user.photoURL || null\r\n            })\r\n          });\r\n          \r\n          if (createResponse.ok) {\r\n            return await fetchUserProfile(user.uid);\r\n          } else {\r\n            console.error('Failed to create user in MongoDB');\r\n            return null;\r\n          }\r\n        }\r\n      } else {\r\n        console.error('Failed to check user in MongoDB');\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error syncing user with MongoDB:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Fetch user profile from MongoDB\r\n  const fetchUserProfile = async (userId) => {\r\n    try {\r\n      const response = await fetch(`${API_URL}/api/users/${userId}`);\r\n      \r\n      if (response.ok) {\r\n        return await response.json();\r\n      } else {\r\n        console.error('Failed to fetch user profile');\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching user profile:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Monitor authentication state\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      setCurrentUser(user);\r\n      \r\n      if (user) {\r\n        try {\r\n          // Sync user with MongoDB and get profile\r\n          const profile = await syncUserWithMongoDB(user);\r\n          setUserProfile(profile);\r\n        } catch (error) {\r\n          console.error('Error syncing user with MongoDB:', error);\r\n        }\r\n      } else {\r\n        setUserProfile(null);\r\n      }\r\n      \r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [currentUser, syncUserWithMongoDB]);\r\n\r\n  const signInWithGoogle = async () => {\r\n    try {\r\n      const result = await firebaseSignInWithGoogle();\r\n      return result;\r\n    } catch (error) {\r\n      console.error(\"Error in googleSignIn:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logOut = async () => {\r\n    try {\r\n      await firebaseLogOut();\r\n      setCurrentUser(null);\r\n    } catch (error) {\r\n      console.error(\"Error signing out:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Update user profile in MongoDB\r\n  const updateUserProfile = async (profileData) => {\r\n    if (!currentUser) {\r\n      throw new Error(\"No authenticated user\");\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(`${API_URL}/api/users/${currentUser.uid}/profile`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(profileData)\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const updatedProfile = await response.json();\r\n        setUserProfile(updatedProfile);\r\n        return updatedProfile;\r\n      } else {\r\n        throw new Error('Failed to update profile');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Save coding history to MongoDB\r\n  const saveCodeHistory = async (historyData) => {\r\n    if (!currentUser || !userProfile) {\r\n      console.error(\"Cannot save history: No authenticated user or profile\");\r\n      return null;\r\n    }\r\n    \r\n    try {\r\n      const response = await fetch(`${API_URL}/api/users/${currentUser.uid}/history`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          language: historyData.language || 'unknown',\r\n          original_code: historyData.originalCode,\r\n          fixed_code: historyData.fixedCode,\r\n          error_message: historyData.errorMessage\r\n        })\r\n      });\r\n      \r\n      if (response.ok) {\r\n        return await response.json();\r\n      } else {\r\n        throw new Error('Failed to save history');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving code history:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    userProfile,\r\n    loading,\r\n    signInWithGoogle,\r\n    logOut,\r\n    updateUserProfile,\r\n    saveCodeHistory\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}