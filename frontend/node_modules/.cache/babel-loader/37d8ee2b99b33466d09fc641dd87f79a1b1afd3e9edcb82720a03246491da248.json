{"ast":null,"code":"var _s = $RefreshSig$();\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signInWithRedirect, signOut } from \"firebase/auth\";\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDV-K0Hu7AzKUG10oIpRnWEcAhYSDxaYYQ\",\n  authDomain: \"ai-code-debug.firebaseapp.com\",\n  projectId: \"ai-code-debug\",\n  storageBucket: \"ai-code-debug.appspot.com\",\n  messagingSenderId: \"436819563814\",\n  appId: \"1:436819563814:web:436819563814\",\n  // Using messageSenderId as a fallback if real app ID unavailable\n  measurementId: \"G-ABC123DEF\"\n};\n\n// Initialize Firebase with error handling\nlet app;\nlet auth;\n// Create a placeholder db object to avoid import errors\nconst db = {};\ntry {\n  console.log(\"Initializing Firebase with config:\", {\n    ...firebaseConfig,\n    apiKey: \"HIDDEN\"\n  });\n  app = initializeApp(firebaseConfig);\n  auth = getAuth(app);\n  console.log(\"Firebase initialized successfully\");\n} catch (error) {\n  console.error(\"Error initializing Firebase:\", error);\n  // Fallback initialization with minimal config\n  try {\n    const minimalConfig = {\n      apiKey: firebaseConfig.apiKey,\n      authDomain: firebaseConfig.authDomain,\n      projectId: firebaseConfig.projectId\n    };\n    console.log(\"Trying minimal Firebase config:\", {\n      ...minimalConfig,\n      apiKey: \"HIDDEN\"\n    });\n    app = initializeApp(minimalConfig);\n    auth = getAuth(app);\n    console.log(\"Firebase initialized with minimal config\");\n  } catch (fallbackError) {\n    console.error(\"Fatal: Could not initialize Firebase even with minimal config:\", fallbackError);\n    // Set empty instances to prevent crashes\n    app = null;\n    auth = null;\n  }\n}\n\n// Create Google provider with specific settings\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.addScope('profile');\ngoogleProvider.addScope('email');\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account',\n  client_id: '432873761264-8camv1a97cpeiq1gglih2j2klq2p97m1.apps.googleusercontent.com' // Your OAuth client ID\n});\n\n// Sign in with Google function with better error handling\nconst signInWithGoogle = async () => {\n  _s();\n  try {\n    // Log to debug the sign-in process\n    console.log(\"Attempting Google sign-in...\");\n    auth.useDeviceLanguage();\n\n    // Try with redirect instead of popup if popup fails repeatedly\n    const result = await signInWithPopup(auth, googleProvider);\n    console.log(\"Sign-in successful:\", result.user);\n    return result.user;\n  } catch (error) {\n    console.error(\"Error signing in with Google:\", error);\n    console.error(\"Error code:\", error.code);\n    console.error(\"Error message:\", error.message);\n    if (error.code === 'auth/popup-closed-by-user') {\n      console.log(\"User closed the popup\");\n    } else if (error.code === 'auth/popup-blocked') {\n      console.log(\"Popup was blocked by the browser\");\n      // You could try redirect here as fallback\n    }\n    throw error;\n  }\n};\n\n// Sign out function\n_s(signInWithGoogle, \"BcOTqc4wwa4CxJGcpsWeXUvpe98=\", false, function () {\n  return [auth.useDeviceLanguage];\n});\nconst logOut = async () => {\n  try {\n    await signOut(auth);\n    console.log(\"Sign-out successful\");\n    return true;\n  } catch (error) {\n    console.error(\"Error signing out:\", error);\n    return false;\n  }\n};\nexport { auth, db, signInWithGoogle, logOut, signInWithRedirect, GoogleAuthProvider };","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","signInWithRedirect","signOut","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","console","log","error","minimalConfig","fallbackError","googleProvider","addScope","setCustomParameters","prompt","client_id","signInWithGoogle","_s","useDeviceLanguage","result","user","code","message","logOut"],"sources":["C:/Users/konda/Videos/Ai-powered-debugger-master/frontend/src/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signInWithRedirect, signOut } from \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDV-K0Hu7AzKUG10oIpRnWEcAhYSDxaYYQ\",\r\n  authDomain: \"ai-code-debug.firebaseapp.com\",\r\n  projectId: \"ai-code-debug\",\r\n  storageBucket: \"ai-code-debug.appspot.com\",\r\n  messagingSenderId: \"436819563814\",\r\n  appId: \"1:436819563814:web:436819563814\",  // Using messageSenderId as a fallback if real app ID unavailable\r\n  measurementId: \"G-ABC123DEF\"\r\n};\r\n\r\n// Initialize Firebase with error handling\r\nlet app;\r\nlet auth;\r\n// Create a placeholder db object to avoid import errors\r\nconst db = {};\r\n\r\ntry {\r\n  console.log(\"Initializing Firebase with config:\", { ...firebaseConfig, apiKey: \"HIDDEN\" });\r\n  app = initializeApp(firebaseConfig);\r\n  auth = getAuth(app);\r\n  console.log(\"Firebase initialized successfully\");\r\n} catch (error) {\r\n  console.error(\"Error initializing Firebase:\", error);\r\n  // Fallback initialization with minimal config\r\n  try {\r\n    const minimalConfig = {\r\n      apiKey: firebaseConfig.apiKey,\r\n      authDomain: firebaseConfig.authDomain,\r\n      projectId: firebaseConfig.projectId\r\n    };\r\n    console.log(\"Trying minimal Firebase config:\", { ...minimalConfig, apiKey: \"HIDDEN\" });\r\n    app = initializeApp(minimalConfig);\r\n    auth = getAuth(app);\r\n    console.log(\"Firebase initialized with minimal config\");\r\n  } catch (fallbackError) {\r\n    console.error(\"Fatal: Could not initialize Firebase even with minimal config:\", fallbackError);\r\n    // Set empty instances to prevent crashes\r\n    app = null;\r\n    auth = null;\r\n  }\r\n}\r\n\r\n// Create Google provider with specific settings\r\nconst googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.addScope('profile');\r\ngoogleProvider.addScope('email');\r\ngoogleProvider.setCustomParameters({\r\n  prompt: 'select_account',\r\n  client_id: '432873761264-8camv1a97cpeiq1gglih2j2klq2p97m1.apps.googleusercontent.com' // Your OAuth client ID\r\n});\r\n\r\n// Sign in with Google function with better error handling\r\nconst signInWithGoogle = async () => {\r\n  try {\r\n    // Log to debug the sign-in process\r\n    console.log(\"Attempting Google sign-in...\");\r\n    auth.useDeviceLanguage();\r\n    \r\n    // Try with redirect instead of popup if popup fails repeatedly\r\n    const result = await signInWithPopup(auth, googleProvider);\r\n    console.log(\"Sign-in successful:\", result.user);\r\n    return result.user;\r\n  } catch (error) {\r\n    console.error(\"Error signing in with Google:\", error);\r\n    console.error(\"Error code:\", error.code);\r\n    console.error(\"Error message:\", error.message);\r\n    \r\n    if (error.code === 'auth/popup-closed-by-user') {\r\n      console.log(\"User closed the popup\");\r\n    } else if (error.code === 'auth/popup-blocked') {\r\n      console.log(\"Popup was blocked by the browser\");\r\n      // You could try redirect here as fallback\r\n    }\r\n    \r\n    throw error;\r\n  }\r\n};\r\n\r\n// Sign out function\r\nconst logOut = async () => {\r\n  try {\r\n    await signOut(auth);\r\n    console.log(\"Sign-out successful\");\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Error signing out:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport { auth, db, signInWithGoogle, logOut, signInWithRedirect, GoogleAuthProvider }; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}