{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\konda\\\\Videos\\\\Ai-powered-debugger-master\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { signInWithRedirect, GoogleAuthProvider } from 'firebase/auth';\nimport { auth } from '../firebase';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const {\n    currentUser,\n    googleSignIn\n  } = useAuth();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [popupFailed, setPopupFailed] = useState(false);\n  useEffect(() => {\n    // If user is logged in, redirect to app\n    if (currentUser) {\n      navigate('/app');\n    }\n  }, [currentUser, navigate]);\n  const handleGoogleSignIn = async () => {\n    if (loading) return;\n    try {\n      setError('');\n      setLoading(true);\n      if (popupFailed) {\n        // If popup failed before, try redirect method\n        const provider = new GoogleAuthProvider();\n        provider.addScope('profile');\n        provider.addScope('email');\n        provider.setCustomParameters({\n          prompt: 'select_account'\n        });\n        await signInWithRedirect(auth, provider);\n        return;\n      }\n\n      // Try popup first\n      await googleSignIn();\n      // Navigate will happen in the useEffect above when currentUser changes\n    } catch (error) {\n      console.error('Google sign-in error:', error);\n      let errorMessage = 'Failed to sign in with Google.';\n      if (error.code === 'auth/popup-closed-by-user') {\n        errorMessage = 'Sign-in canceled. You closed the popup.';\n      } else if (error.code === 'auth/popup-blocked') {\n        errorMessage = 'Popup was blocked. Trying redirect method...';\n        setPopupFailed(true);\n        // Try redirect on next click\n      } else if (error.code === 'auth/cancelled-popup-request') {\n        errorMessage = 'Multiple popups were detected. Please try again.';\n      } else if (error.code === 'auth/network-request-failed') {\n        errorMessage = 'Network error. Please check your connection and try again.';\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/logo.svg\",\n          alt: \"AI Code Debugger Logo\",\n          className: \"app-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"AI Code Debugger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"app-subtitle\",\n        children: \"Debug your code with the power of AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGoogleSignIn,\n        className: \"google-signin-button\",\n        disabled: loading,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://developers.google.com/identity/images/g-logo.png\",\n          alt: \"Google logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), loading ? 'Signing in...' : popupFailed ? 'Continue with Google' : 'Sign in with Google']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-info\",\n        children: \"By signing in, you agree to our Terms of Service and Privacy Policy.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Si/s1vb0knEaCoU472bvVWcVkUg=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useAuth","signInWithRedirect","GoogleAuthProvider","auth","jsxDEV","_jsxDEV","LoginPage","_s","currentUser","googleSignIn","navigate","error","setError","loading","setLoading","popupFailed","setPopupFailed","handleGoogleSignIn","provider","addScope","setCustomParameters","prompt","console","errorMessage","code","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/konda/Videos/Ai-powered-debugger-master/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { signInWithRedirect, GoogleAuthProvider } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\nimport '../styles.css';\r\n\r\nconst LoginPage = () => {\r\n  const { currentUser, googleSignIn } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [popupFailed, setPopupFailed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // If user is logged in, redirect to app\r\n    if (currentUser) {\r\n      navigate('/app');\r\n    }\r\n  }, [currentUser, navigate]);\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    if (loading) return;\r\n    \r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      \r\n      if (popupFailed) {\r\n        // If popup failed before, try redirect method\r\n        const provider = new GoogleAuthProvider();\r\n        provider.addScope('profile');\r\n        provider.addScope('email');\r\n        provider.setCustomParameters({\r\n          prompt: 'select_account'\r\n        });\r\n        await signInWithRedirect(auth, provider);\r\n        return;\r\n      }\r\n      \r\n      // Try popup first\r\n      await googleSignIn();\r\n      // Navigate will happen in the useEffect above when currentUser changes\r\n    } catch (error) {\r\n      console.error('Google sign-in error:', error);\r\n      \r\n      let errorMessage = 'Failed to sign in with Google.';\r\n      \r\n      if (error.code === 'auth/popup-closed-by-user') {\r\n        errorMessage = 'Sign-in canceled. You closed the popup.';\r\n      } else if (error.code === 'auth/popup-blocked') {\r\n        errorMessage = 'Popup was blocked. Trying redirect method...';\r\n        setPopupFailed(true);\r\n        // Try redirect on next click\r\n      } else if (error.code === 'auth/cancelled-popup-request') {\r\n        errorMessage = 'Multiple popups were detected. Please try again.';\r\n      } else if (error.code === 'auth/network-request-failed') {\r\n        errorMessage = 'Network error. Please check your connection and try again.';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-card\">\r\n        <div className=\"logo-container\">\r\n          <img src=\"/logo.svg\" alt=\"AI Code Debugger Logo\" className=\"app-logo\" />\r\n        </div>\r\n        <h1 className=\"app-title\">AI Code Debugger</h1>\r\n        <p className=\"app-subtitle\">Debug your code with the power of AI</p>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        <button \r\n          onClick={handleGoogleSignIn} \r\n          className=\"google-signin-button\"\r\n          disabled={loading}\r\n        >\r\n          <img src=\"https://developers.google.com/identity/images/g-logo.png\" alt=\"Google logo\" />\r\n          {loading ? 'Signing in...' : popupFailed ? 'Continue with Google' : 'Sign in with Google'}\r\n        </button>\r\n        \r\n        <p className=\"login-info\">\r\n          By signing in, you agree to our Terms of Service and Privacy Policy.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}